{"ast":null,"code":"var _jsxFileName = \"/Users/yeduruabhiram/Desktop/suresh ment01/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { auth, db } from '../firebase/config';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Sign up function\n  const signup = async (email, password, username) => {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n\n      // Create user document in Firestore\n      await setDoc(doc(db, 'users', userCredential.user.uid), {\n        username,\n        email,\n        role: 'user',\n        // Default role\n        createdAt: new Date().toISOString()\n      });\n      toast.success('Account created successfully!');\n      return userCredential.user;\n    } catch (error) {\n      toast.error(error.message);\n      throw error;\n    }\n  };\n\n  // Log in function\n  const login = async (email, password) => {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      toast.success('Login successful!');\n      return userCredential.user;\n    } catch (error) {\n      toast.error(error.message);\n      throw error;\n    }\n  };\n\n  // Log out function\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      toast.success('Logged out successfully');\n    } catch (error) {\n      toast.error(error.message);\n      throw error;\n    }\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return userRole === 'admin';\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      setCurrentUser(user);\n      if (user) {\n        try {\n          const docRef = doc(db, 'users', user.uid);\n          const docSnap = await getDoc(docRef);\n          if (docSnap.exists()) {\n            setUserRole(docSnap.data().role);\n          }\n        } catch (error) {\n          console.error('Error fetching user role:', error);\n        }\n      } else {\n        setUserRole(null);\n      }\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    userRole,\n    signup,\n    login,\n    logout,\n    isAdmin,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"oJcdYGl4IB/GVvCCnTftfffWqnQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","doc","getDoc","setDoc","auth","db","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","userRole","setUserRole","loading","setLoading","signup","email","password","username","userCredential","user","uid","role","createdAt","Date","toISOString","success","error","message","login","logout","isAdmin","unsubscribe","docRef","docSnap","exists","data","console","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yeduruabhiram/Desktop/suresh ment01/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword, \n  signOut,\n  onAuthStateChanged\n} from 'firebase/auth';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { auth, db } from '../firebase/config';\nimport { toast } from 'react-toastify';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Sign up function\n  const signup = async (email, password, username) => {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      \n      // Create user document in Firestore\n      await setDoc(doc(db, 'users', userCredential.user.uid), {\n        username,\n        email,\n        role: 'user', // Default role\n        createdAt: new Date().toISOString()\n      });\n      \n      toast.success('Account created successfully!');\n      return userCredential.user;\n    } catch (error) {\n      toast.error(error.message);\n      throw error;\n    }\n  };\n\n  // Log in function\n  const login = async (email, password) => {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      toast.success('Login successful!');\n      return userCredential.user;\n    } catch (error) {\n      toast.error(error.message);\n      throw error;\n    }\n  };\n\n  // Log out function\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      toast.success('Logged out successfully');\n    } catch (error) {\n      toast.error(error.message);\n      throw error;\n    }\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return userRole === 'admin';\n  };\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\n      setCurrentUser(user);\n      \n      if (user) {\n        try {\n          const docRef = doc(db, 'users', user.uid);\n          const docSnap = await getDoc(docRef);\n          \n          if (docSnap.exists()) {\n            setUserRole(docSnap.data().role);\n          }\n        } catch (error) {\n          console.error('Error fetching user role:', error);\n        }\n      } else {\n        setUserRole(null);\n      }\n      \n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    userRole,\n    signup,\n    login,\n    logout,\n    isAdmin,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}