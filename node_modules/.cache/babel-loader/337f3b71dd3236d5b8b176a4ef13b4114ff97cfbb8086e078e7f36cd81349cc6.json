{"ast":null,"code":"var _jsxFileName = \"/Users/yeduruabhiram/Desktop/suresh ment01/src/contexts/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n  const [totalItems, setTotalItems] = useState(0);\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  // Load cart from local storage on initial render\n  useEffect(() => {\n    const savedCart = localStorage.getItem('teddyCart');\n    if (savedCart) {\n      try {\n        const parsedCart = JSON.parse(savedCart);\n        setCart(parsedCart);\n      } catch (error) {\n        console.error('Failed to parse cart from localStorage:', error);\n      }\n    }\n  }, []);\n\n  // Update local storage whenever cart changes\n  useEffect(() => {\n    localStorage.setItem('teddyCart', JSON.stringify(cart));\n\n    // Calculate total items and price\n    const items = cart.reduce((total, item) => total + item.quantity, 0);\n    const price = cart.reduce((total, item) => total + item.price * item.quantity, 0);\n    setTotalItems(items);\n    setTotalPrice(price);\n  }, [cart]);\n\n  // Add item to cart\n  const addToCart = (product, quantity = 1) => {\n    setCart(prevCart => {\n      const existingItemIndex = prevCart.findIndex(item => item.id === product.id);\n      if (existingItemIndex >= 0) {\n        // Item exists, update quantity\n        const updatedCart = [...prevCart];\n        updatedCart[existingItemIndex] = {\n          ...updatedCart[existingItemIndex],\n          quantity: updatedCart[existingItemIndex].quantity + quantity\n        };\n        toast.success('Item quantity updated in cart');\n        return updatedCart;\n      } else {\n        // Item doesn't exist, add new item\n        toast.success('Item added to cart');\n        return [...prevCart, {\n          ...product,\n          quantity\n        }];\n      }\n    });\n  };\n\n  // Remove item from cart\n  const removeFromCart = productId => {\n    setCart(prevCart => {\n      const updatedCart = prevCart.filter(item => item.id !== productId);\n      toast.info('Item removed from cart');\n      return updatedCart;\n    });\n  };\n\n  // Update quantity for an item in cart\n  const updateQuantity = (productId, newQuantity) => {\n    if (newQuantity < 1) {\n      removeFromCart(productId);\n      return;\n    }\n    setCart(prevCart => {\n      return prevCart.map(item => item.id === productId ? {\n        ...item,\n        quantity: newQuantity\n      } : item);\n    });\n  };\n\n  // Clear the entire cart\n  const clearCart = () => {\n    setCart([]);\n    toast.info('Cart cleared');\n  };\n  const value = {\n    cart,\n    totalItems,\n    totalPrice,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"vMhps8zLyHx2XcAV4GQoxGkl9oc=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","totalItems","setTotalItems","totalPrice","setTotalPrice","savedCart","localStorage","getItem","parsedCart","JSON","parse","error","console","setItem","stringify","items","reduce","total","item","quantity","price","addToCart","product","prevCart","existingItemIndex","findIndex","id","updatedCart","success","removeFromCart","productId","filter","info","updateQuantity","newQuantity","map","clearCart","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yeduruabhiram/Desktop/suresh ment01/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nconst CartContext = createContext();\n\nexport const useCart = () => useContext(CartContext);\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n  const [totalItems, setTotalItems] = useState(0);\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  // Load cart from local storage on initial render\n  useEffect(() => {\n    const savedCart = localStorage.getItem('teddyCart');\n    if (savedCart) {\n      try {\n        const parsedCart = JSON.parse(savedCart);\n        setCart(parsedCart);\n      } catch (error) {\n        console.error('Failed to parse cart from localStorage:', error);\n      }\n    }\n  }, []);\n\n  // Update local storage whenever cart changes\n  useEffect(() => {\n    localStorage.setItem('teddyCart', JSON.stringify(cart));\n    \n    // Calculate total items and price\n    const items = cart.reduce((total, item) => total + item.quantity, 0);\n    const price = cart.reduce((total, item) => total + (item.price * item.quantity), 0);\n    \n    setTotalItems(items);\n    setTotalPrice(price);\n  }, [cart]);\n\n  // Add item to cart\n  const addToCart = (product, quantity = 1) => {\n    setCart(prevCart => {\n      const existingItemIndex = prevCart.findIndex(item => item.id === product.id);\n      \n      if (existingItemIndex >= 0) {\n        // Item exists, update quantity\n        const updatedCart = [...prevCart];\n        updatedCart[existingItemIndex] = {\n          ...updatedCart[existingItemIndex],\n          quantity: updatedCart[existingItemIndex].quantity + quantity\n        };\n        toast.success('Item quantity updated in cart');\n        return updatedCart;\n      } else {\n        // Item doesn't exist, add new item\n        toast.success('Item added to cart');\n        return [...prevCart, { ...product, quantity }];\n      }\n    });\n  };\n\n  // Remove item from cart\n  const removeFromCart = (productId) => {\n    setCart(prevCart => {\n      const updatedCart = prevCart.filter(item => item.id !== productId);\n      toast.info('Item removed from cart');\n      return updatedCart;\n    });\n  };\n\n  // Update quantity for an item in cart\n  const updateQuantity = (productId, newQuantity) => {\n    if (newQuantity < 1) {\n      removeFromCart(productId);\n      return;\n    }\n\n    setCart(prevCart => {\n      return prevCart.map(item => \n        item.id === productId ? { ...item, quantity: newQuantity } : item\n      );\n    });\n  };\n\n  // Clear the entire cart\n  const clearCart = () => {\n    setCart([]);\n    toast.info('Cart cleared');\n  };\n\n  const value = {\n    cart,\n    totalItems,\n    totalPrice,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}