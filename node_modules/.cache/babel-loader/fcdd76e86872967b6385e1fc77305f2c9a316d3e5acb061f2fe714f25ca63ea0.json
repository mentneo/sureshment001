{"ast":null,"code":"const CLOUDINARY_CLOUD_NAME = 'davjxvz8w';\nconst UPLOAD_PRESET = 'teddy_bears'; // Changed to a more appropriate preset name\nconst CLOUDINARY_URL = `https://api.cloudinary.com/v1_1/${CLOUDINARY_CLOUD_NAME}/image/upload`;\n\n// Local fallback image paths for development\nconst DEFAULT_TEDDY_IMAGE = '/images/default-teddy.jpg';\nexport const uploadImageToCloudinary = async imageFile => {\n  try {\n    // Create a unique folder path based on timestamp\n    const timestamp = new Date().getTime();\n    const folderPath = `teddy_bears_shop/${timestamp}`;\n    const formData = new FormData();\n    formData.append('file', imageFile);\n    formData.append('upload_preset', UPLOAD_PRESET);\n    formData.append('folder', folderPath); // Specify the folder in Cloudinary\n\n    const response = await fetch(CLOUDINARY_URL, {\n      method: 'POST',\n      body: formData\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Cloudinary Error:', errorText);\n      throw new Error('Failed to upload image');\n    }\n    const data = await response.json();\n    return {\n      url: data.secure_url,\n      publicId: data.public_id\n    };\n  } catch (error) {\n    console.error('Error uploading image:', error);\n\n    // Return a local fallback image for development\n    return {\n      url: DEFAULT_TEDDY_IMAGE,\n      publicId: 'local_fallback'\n    };\n  }\n};","map":{"version":3,"names":["CLOUDINARY_CLOUD_NAME","UPLOAD_PRESET","CLOUDINARY_URL","DEFAULT_TEDDY_IMAGE","uploadImageToCloudinary","imageFile","timestamp","Date","getTime","folderPath","formData","FormData","append","response","fetch","method","body","ok","errorText","text","console","error","Error","data","json","url","secure_url","publicId","public_id"],"sources":["/Users/yeduruabhiram/Desktop/suresh ment01/src/utils/cloudinary.js"],"sourcesContent":["const CLOUDINARY_CLOUD_NAME = 'davjxvz8w';\nconst UPLOAD_PRESET = 'teddy_bears'; // Changed to a more appropriate preset name\nconst CLOUDINARY_URL = `https://api.cloudinary.com/v1_1/${CLOUDINARY_CLOUD_NAME}/image/upload`;\n\n// Local fallback image paths for development\nconst DEFAULT_TEDDY_IMAGE = '/images/default-teddy.jpg';\n\nexport const uploadImageToCloudinary = async (imageFile) => {\n  try {\n    // Create a unique folder path based on timestamp\n    const timestamp = new Date().getTime();\n    const folderPath = `teddy_bears_shop/${timestamp}`;\n    \n    const formData = new FormData();\n    formData.append('file', imageFile);\n    formData.append('upload_preset', UPLOAD_PRESET);\n    formData.append('folder', folderPath); // Specify the folder in Cloudinary\n    \n    const response = await fetch(CLOUDINARY_URL, {\n      method: 'POST',\n      body: formData,\n    });\n    \n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Cloudinary Error:', errorText);\n      throw new Error('Failed to upload image');\n    }\n    \n    const data = await response.json();\n    return {\n      url: data.secure_url,\n      publicId: data.public_id\n    };\n  } catch (error) {\n    console.error('Error uploading image:', error);\n    \n    // Return a local fallback image for development\n    return {\n      url: DEFAULT_TEDDY_IMAGE,\n      publicId: 'local_fallback'\n    };\n  }\n};\n"],"mappings":"AAAA,MAAMA,qBAAqB,GAAG,WAAW;AACzC,MAAMC,aAAa,GAAG,aAAa,CAAC,CAAC;AACrC,MAAMC,cAAc,GAAG,mCAAmCF,qBAAqB,eAAe;;AAE9F;AACA,MAAMG,mBAAmB,GAAG,2BAA2B;AAEvD,OAAO,MAAMC,uBAAuB,GAAG,MAAOC,SAAS,IAAK;EAC1D,IAAI;IACF;IACA,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IACtC,MAAMC,UAAU,GAAG,oBAAoBH,SAAS,EAAE;IAElD,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,SAAS,CAAC;IAClCK,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAEX,aAAa,CAAC;IAC/CS,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEH,UAAU,CAAC,CAAC,CAAC;;IAEvC,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACZ,cAAc,EAAE;MAC3Ca,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MACvCC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEH,SAAS,CAAC;MAC7C,MAAM,IAAII,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClC,OAAO;MACLC,GAAG,EAAEF,IAAI,CAACG,UAAU;MACpBC,QAAQ,EAAEJ,IAAI,CAACK;IACjB,CAAC;EACH,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;;IAE9C;IACA,OAAO;MACLI,GAAG,EAAEtB,mBAAmB;MACxBwB,QAAQ,EAAE;IACZ,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}