{"ast":null,"code":"const CLOUDINARY_CLOUD_NAME = 'davjxvz8w';\nconst UPLOAD_PRESET = 'cryptchat';\nconst CLOUDINARY_URL = `https://api.cloudinary.com/v1_1/${CLOUDINARY_CLOUD_NAME}/image/upload`;\nexport const uploadImageToCloudinary = async imageFile => {\n  try {\n    const formData = new FormData();\n    formData.append('file', imageFile);\n    formData.append('upload_preset', UPLOAD_PRESET);\n    const response = await fetch(CLOUDINARY_URL, {\n      method: 'POST',\n      body: formData\n    });\n    if (!response.ok) {\n      console.error('Cloudinary Error:', await response.text());\n      throw new Error('Failed to upload image');\n    }\n    const data = await response.json();\n    return {\n      url: data.secure_url,\n      publicId: data.public_id\n    };\n  } catch (error) {\n    console.error('Error uploading image:', error);\n\n    // Return default image for development to avoid breaking the app\n    return {\n      url: 'https://res.cloudinary.com/davjxvz8w/image/upload/v1653928376/teddy-bears/placeholder_teddy_bear_jmtfdi.jpg',\n      publicId: 'teddy-bears/placeholder'\n    };\n  }\n};","map":{"version":3,"names":["CLOUDINARY_CLOUD_NAME","UPLOAD_PRESET","CLOUDINARY_URL","uploadImageToCloudinary","imageFile","formData","FormData","append","response","fetch","method","body","ok","console","error","text","Error","data","json","url","secure_url","publicId","public_id"],"sources":["/Users/yeduruabhiram/Desktop/suresh ment01/src/utils/cloudinary.js"],"sourcesContent":["const CLOUDINARY_CLOUD_NAME = 'davjxvz8w';\nconst UPLOAD_PRESET = 'cryptchat';\nconst CLOUDINARY_URL = `https://api.cloudinary.com/v1_1/${CLOUDINARY_CLOUD_NAME}/image/upload`;\n\nexport const uploadImageToCloudinary = async (imageFile) => {\n  try {\n    const formData = new FormData();\n    formData.append('file', imageFile);\n    formData.append('upload_preset', UPLOAD_PRESET);\n    \n    const response = await fetch(CLOUDINARY_URL, {\n      method: 'POST',\n      body: formData,\n    });\n    \n    if (!response.ok) {\n      console.error('Cloudinary Error:', await response.text());\n      throw new Error('Failed to upload image');\n    }\n    \n    const data = await response.json();\n    return {\n      url: data.secure_url,\n      publicId: data.public_id\n    };\n  } catch (error) {\n    console.error('Error uploading image:', error);\n    \n    // Return default image for development to avoid breaking the app\n    return {\n      url: 'https://res.cloudinary.com/davjxvz8w/image/upload/v1653928376/teddy-bears/placeholder_teddy_bear_jmtfdi.jpg',\n      publicId: 'teddy-bears/placeholder'\n    };\n  }\n};\n"],"mappings":"AAAA,MAAMA,qBAAqB,GAAG,WAAW;AACzC,MAAMC,aAAa,GAAG,WAAW;AACjC,MAAMC,cAAc,GAAG,mCAAmCF,qBAAqB,eAAe;AAE9F,OAAO,MAAMG,uBAAuB,GAAG,MAAOC,SAAS,IAAK;EAC1D,IAAI;IACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,SAAS,CAAC;IAClCC,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAEN,aAAa,CAAC;IAE/C,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACP,cAAc,EAAE;MAC3CQ,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;MAChBC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAE,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;MACzD,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,OAAO;MACLC,GAAG,EAAEF,IAAI,CAACG,UAAU;MACpBC,QAAQ,EAAEJ,IAAI,CAACK;IACjB,CAAC;EACH,CAAC,CAAC,OAAOR,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;;IAE9C;IACA,OAAO;MACLK,GAAG,EAAE,6GAA6G;MAClHE,QAAQ,EAAE;IACZ,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}